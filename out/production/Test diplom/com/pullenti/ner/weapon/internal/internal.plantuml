@startuml

title __INTERNAL's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace weapon {
      namespace internal {
        class com.pullenti.ner.weapon.internal.MetaWeapon {
            {static} + IMAGEID : String
            {static} + globalMeta : MetaWeapon
            + MetaWeapon()
            + getCaption()
            + getImageId()
            + getName()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace weapon {
      namespace internal {
        class com.pullenti.ner.weapon.internal.WeaponItemToken {
            {static} + _globalInstance : WeaponItemToken
            + altValue : String
            + isAfterConjunction : boolean
            + isDoubt : boolean
            + isInternal : boolean
            + value : String
            - innerTokens : ArrayList<WeaponItemToken>
            {static} - m_Ontology : TerminCollection
            + WeaponItemToken()
            + WeaponItemToken()
            {static} + _new2802()
            {static} + _new2803()
            {static} + _new2804()
            {static} + _new2808()
            {static} + _new2813()
            {static} + initialize()
            + toString()
            {static} + tryParse()
            {static} + tryParseList()
            {static} - _TryParse()
            - _correctModel()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace weapon {
      namespace internal {
        class com.pullenti.ner.weapon.internal.WeaponItemToken.Typs {
            {static} + BRAND : Typs
            {static} + CALIBER : Typs
            {static} + CLASS : Typs
            {static} + DATE : Typs
            {static} + DEVELOPER : Typs
            {static} + MODEL : Typs
            {static} + NAME : Typs
            {static} + NOUN : Typs
            {static} + NUMBER : Typs
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : Typs[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, Typs>
            {static} - mapStringToEnum : HashMap<String, Typs>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - Typs()
        }
      }
    }
  }
  

  com.pullenti.ner.weapon.internal.MetaWeapon -up-|> com.pullenti.ner.ReferentClass
  com.pullenti.ner.weapon.internal.WeaponItemToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.weapon.internal.WeaponItemToken o-- com.pullenti.ner.Referent : ref
  com.pullenti.ner.weapon.internal.WeaponItemToken o-- com.pullenti.ner.weapon.internal.WeaponItemToken.Typs : typ
  com.pullenti.ner.weapon.internal.WeaponItemToken +-down- com.pullenti.ner.weapon.internal.WeaponItemToken.Typs
  com.pullenti.ner.weapon.internal.WeaponItemToken.Typs .up.|> java.lang.Comparable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
