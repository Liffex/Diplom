@startuml

title __MEASURE's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace measure {
      class com.pullenti.ner.measure.MeasureAnalyzer {
          {static} + ANALYZER_NAME : String
          {static} - m_Initialized : boolean
          {static} - m_Lock : Object
          + MeasureAnalyzer()
          + clone()
          + createReferent()
          + getCaption()
          + getDescription()
          + getImages()
          + getName()
          + getProgressWeight()
          + getTypeSystem()
          {static} + initialize()
          + isSpecific()
          + process()
          + processOntologyItem()
          + processReferent()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      class com.pullenti.ner.measure.MeasureKind {
          {static} + AREA : MeasureKind
          {static} + IP : MeasureKind
          {static} + LENGTH : MeasureKind
          {static} + PERCENT : MeasureKind
          {static} + SPEED : MeasureKind
          {static} + TEMPERATURE : MeasureKind
          {static} + TIME : MeasureKind
          {static} + UNDEFINED : MeasureKind
          {static} + VOLUME : MeasureKind
          {static} + WEIGHT : MeasureKind
          {static} - m_Keys : Collection<Integer>
          {static} - m_Values : MeasureKind[]
          - m_str : String
          - m_val : int
          {static} - mapIntToEnum : HashMap<Integer, MeasureKind>
          {static} - mapStringToEnum : HashMap<String, MeasureKind>
          + compareTo()
          {static} + getValues()
          + hashCode()
          {static} + isDefined()
          {static} + of()
          {static} + of()
          + toString()
          + value()
          - MeasureKind()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      class com.pullenti.ner.measure.MeasureReferent {
          {static} + ATTR_KIND : String
          {static} + ATTR_NAME : String
          {static} + ATTR_REF : String
          {static} + ATTR_TEMPLATE : String
          {static} + ATTR_UNIT : String
          {static} + ATTR_VALUE : String
          {static} + OBJ_TYPENAME : String
          + MeasureReferent()
          + addValue()
          + canBeEquals()
          + getDoubleValues()
          + getKind()
          + getTemplate()
          + getUnits()
          + outUnits()
          + setKind()
          + setTemplate()
          + toString()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      class com.pullenti.ner.measure.UnitReferent {
          {static} + ATTR_BASEFACTOR : String
          {static} + ATTR_BASEUNIT : String
          {static} + ATTR_FULLNAME : String
          {static} + ATTR_NAME : String
          {static} + ATTR_POW : String
          {static} + ATTR_UNKNOWN : String
          {static} + OBJ_TYPENAME : String
          + UnitReferent()
          + canBeEquals()
          + getParentReferent()
          + isUnknown()
          + setUnknown()
          + toString()
      }
    }
  }
  

  com.pullenti.ner.measure.MeasureAnalyzer -up-|> com.pullenti.ner.Analyzer
  com.pullenti.ner.measure.MeasureKind .up.|> java.lang.Comparable
  com.pullenti.ner.measure.MeasureReferent -up-|> com.pullenti.ner.Referent
  com.pullenti.ner.measure.UnitReferent -up-|> com.pullenti.ner.Referent
  com.pullenti.ner.measure.UnitReferent o-- com.pullenti.ner.measure.internal.Unit : m_Unit


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
