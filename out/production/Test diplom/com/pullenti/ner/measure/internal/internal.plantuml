@startuml

title __INTERNAL's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.MeasureHelper {
            + MeasureHelper()
            {static} + isMultChar()
            {static} + isMultCharEnd()
            {static} + tryParseDouble()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.MeasureMeta {
            {static} + GLOBALMETA : MeasureMeta
            {static} + IMAGEID : String
            + MeasureMeta()
            + getCaption()
            + getImageId()
            + getName()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.MeasureToken {
            + internals : ArrayList<MeasureToken>
            + isEmpty : boolean
            + isSet : boolean
            + name : String
            + reliable : boolean
            + MeasureToken()
            + MeasureToken()
            {static} + _new1625()
            {static} + _new1631()
            {static} + _new1633()
            {static} + _new1635()
            + createRefenetsTokensWithRegister()
            + getNormValues()
            + toString()
            {static} + tryParse()
            {static} + tryParseMinimal()
            - _parseInternals()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.NumbersWithUnitToken {
            {static} + _globalInstance : NumbersWithUnitToken
            + about : boolean
            + fromInclude : boolean
            + fromVal : Double
            + isAge : boolean
            {static} + m_Spec : TerminCollection
            {static} + m_Termins : TerminCollection
            + not : boolean
            + plusMinus : Double
            + plusMinusPercent : boolean
            + singleVal : Double
            + toInclude : boolean
            + toVal : Double
            + units : ArrayList<UnitToken>
            + NumbersWithUnitToken()
            + NumbersWithUnitToken()
            {static} + _isMinOrMax()
            {static} + _new1632()
            {static} + _new1641()
            {static} + _tryParse()
            {static} + _tryParseWHL()
            + createRefenetsTokensWithRegister()
            {static} + initialize()
            + toString()
            {static} + tryParse()
            {static} + tryParseMulti()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.NumbersWithUnitToken.DiapTyp {
            {static} + FROM : DiapTyp
            {static} + GE : DiapTyp
            {static} + GT : DiapTyp
            {static} + LE : DiapTyp
            {static} + LS : DiapTyp
            {static} + TO : DiapTyp
            {static} + UNDEFINED : DiapTyp
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : DiapTyp[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, DiapTyp>
            {static} - mapStringToEnum : HashMap<String, DiapTyp>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - DiapTyp()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.Unit {
            + baseMultiplier : double
            + fullnameCyr : String
            + fullnameLat : String
            + keywords : ArrayList<String>
            + nameCyr : String
            + nameLat : String
            + psevdo : ArrayList<Unit>
            + Unit()
            + Unit()
            {static} + _new1660()
            {static} + _new1664()
            {static} + _new1711()
            {static} + _new1719()
            {static} + _new1746()
            + toString()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.UnitMeta {
            {static} + GLOBALMETA : UnitMeta
            {static} + IMAGEID : String
            + UnitMeta()
            + getCaption()
            + getImageId()
            + getName()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.UnitToken {
            + isDoubt : boolean
            + pow : int
            + unknownName : String
            + UnitToken()
            + UnitToken()
            {static} + _new1639()
            {static} + _new1751()
            {static} + _new1754()
            {static} + _new1755()
            {static} + calcKind()
            {static} + canBeEquals()
            + createReferentWithRegister()
            {static} + outUnits()
            + toString()
            {static} + tryParse()
            {static} + tryParseList()
            - _checkDoubt()
            - _correct()
            {static} - _createReferent()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.UnitsFactors {
            {static} + CENTI : UnitsFactors
            {static} + DECI : UnitsFactors
            {static} + GIGA : UnitsFactors
            {static} + KILO : UnitsFactors
            {static} + MEGA : UnitsFactors
            {static} + MICRO : UnitsFactors
            {static} + MILLI : UnitsFactors
            {static} + NANO : UnitsFactors
            {static} + NO : UnitsFactors
            {static} + PICO : UnitsFactors
            {static} + TERA : UnitsFactors
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : UnitsFactors[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, UnitsFactors>
            {static} - mapStringToEnum : HashMap<String, UnitsFactors>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - UnitsFactors()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace measure {
      namespace internal {
        class com.pullenti.ner.measure.internal.UnitsHelper {
            {static} + TERMINS : TerminCollection
            {static} + UALCO : Unit
            {static} + UGRADUS : Unit
            {static} + UGRADUSC : Unit
            {static} + UGRADUSF : Unit
            {static} + UHOUR : Unit
            {static} + UMINUTE : Unit
            {static} + UNITS : ArrayList<Unit>
            {static} + UOM : Unit
            {static} + UPERCENT : Unit
            {static} + USEC : Unit
            {static} - m_Inited : boolean
            {static} - m_KindsKeywords : HashMap<MeasureKind, ArrayList<String>>
            + UnitsHelper()
            {static} + checkKeyword()
            {static} + findUnit()
            {static} + initialize()
            {static} - _addFactor()
        }
      }
    }
  }
  

  com.pullenti.ner.measure.internal.MeasureMeta -up-|> com.pullenti.ner.ReferentClass
  com.pullenti.ner.measure.internal.MeasureToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.measure.internal.MeasureToken o-- com.pullenti.ner.measure.internal.MeasureToken : internalEx
  com.pullenti.ner.measure.internal.MeasureToken o-- com.pullenti.ner.measure.internal.NumbersWithUnitToken : nums
  com.pullenti.ner.measure.internal.NumbersWithUnitToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.measure.internal.NumbersWithUnitToken o-- com.pullenti.ner.measure.internal.NumbersWithUnitToken : divNum
  com.pullenti.ner.measure.internal.NumbersWithUnitToken o-- com.pullenti.ner.MetaToken : wHL
  com.pullenti.ner.measure.internal.NumbersWithUnitToken +-down- com.pullenti.ner.measure.internal.NumbersWithUnitToken.DiapTyp
  com.pullenti.ner.measure.internal.NumbersWithUnitToken.DiapTyp .up.|> java.lang.Comparable
  com.pullenti.ner.measure.internal.Unit o-- com.pullenti.ner.measure.internal.Unit : baseUnit
  com.pullenti.ner.measure.internal.Unit o-- com.pullenti.ner.measure.internal.UnitsFactors : factor
  com.pullenti.ner.measure.internal.Unit o-- com.pullenti.ner.measure.MeasureKind : kind
  com.pullenti.ner.measure.internal.Unit o-- com.pullenti.ner.measure.internal.Unit : multUnit
  com.pullenti.ner.measure.internal.UnitMeta -up-|> com.pullenti.ner.ReferentClass
  com.pullenti.ner.measure.internal.UnitToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.measure.internal.UnitToken o-- com.pullenti.ner.measure.UnitReferent : extOnto
  com.pullenti.ner.measure.internal.UnitToken o-- com.pullenti.ner.Token : keyword
  com.pullenti.ner.measure.internal.UnitToken o-- com.pullenti.ner.measure.internal.Unit : unit
  com.pullenti.ner.measure.internal.UnitsFactors .up.|> java.lang.Comparable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
