@startuml

title __INTERNAL's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.BlkTyps {
            {static} + APPENDIX : BlkTyps
            {static} + CHAPTER : BlkTyps
            {static} + CONSLUSION : BlkTyps
            {static} + INDEX : BlkTyps
            {static} + INDEXITEM : BlkTyps
            {static} + INTRO : BlkTyps
            {static} + LITERATURE : BlkTyps
            {static} + MISC : BlkTyps
            {static} + UNDEFINED : BlkTyps
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : BlkTyps[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, BlkTyps>
            {static} - mapStringToEnum : HashMap<String, BlkTyps>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - BlkTyps()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.BlockLine {
            + hasContentItemTail : boolean
            + hasVerb : boolean
            + isAllUpper : boolean
            + isExistName : boolean
            + notWords : int
            + words : int
            {static} - m_Ontology : TerminCollection
            + BlockLine()
            + BlockLine()
            {static} + create()
            {static} + initialize()
            {static} - _isPub()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.BlockTitleToken {
            + value : String
            + BlockTitleToken()
            + BlockTitleToken()
            {static} + _new476()
            + toString()
            {static} + tryAttach()
            {static} + tryAttachList()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.GeneralRelationHelper {
            {static} + _globalInstance : GeneralRelationHelper
            + GeneralRelationHelper()
            {static} + refreshGenerals()
            {static} - _correctReferents()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.GeneralRelationHelper.Node {
            + deleted : boolean
            + genFrom : ArrayList<Node>
            + genTo : ArrayList<Node>
            + refsFrom : ArrayList<Node>
            + refsTo : ArrayList<Node>
            + Node()
            {static} + _new479()
            + isInGenParentsOrHigher()
            + replaceValues()
            + toString()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.NounPhraseItem {
            + adjMorph : ArrayList<NounPhraseItemTextVar>
            + canBeAdj : boolean
            + canBeNoun : boolean
            + canBeSurname : boolean
            + conjBefore : boolean
            + isDoubtAdjective : boolean
            + isStdAdjective : boolean
            + multiNouns : boolean
            + nounMorph : ArrayList<NounPhraseItemTextVar>
            {static} - m_StdAdjectives : TerminCollection
            + NounPhraseItem()
            + NounPhraseItem()
            {static} + _new487()
            + canBeAdjForPersonalPronoun()
            + canBeNumericAdj()
            + getNormalCaseText()
            {static} + initialize()
            + isAdverb()
            + isPersonalPronoun()
            + isPronoun()
            + isValue()
            + isVerb()
            {static} + tryAccordAdjAndNoun()
            + tryAccordVar()
            {static} + tryAccordVariant()
            {static} + tryParse()
            - _corrChars()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.NounPhraseItemTextVar {
            + normalValue : String
            + singleNumberValue : String
            + undefCoef : int
            + NounPhraseItemTextVar()
            + NounPhraseItemTextVar()
            + clone()
            + correctPrefix()
            + toString()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.NumberExHelper {
            {static} + m_NormalsTyps : HashMap<NumberExType, String>
            {static} + m_Postfixes : TerminCollection
            {static} - m_SmallMoney : TerminCollection
            + NumberExHelper()
            {static} + initialize()
            {static} + tryAttachPostfixOnly()
            {static} + tryParseNumberWithPostfix()
            {static} - _attachSpecPostfix()
            {static} - _corrExTyp2()
            {static} - _correctExtTypes()
            {static} - _correctMoney()
            {static} - getDecimalRest100()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.ProgressPeace {
            + max : float
            + min : float
            + ProgressPeace()
            {static} + _new2880()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.ResourceHelper {
            + ResourceHelper()
            {static} + getBytes()
            {static} + getString()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.RusLatAccord {
            + lat : String
            + latToRus : boolean
            + onTail : boolean
            + rus : String
            + rusToLat : boolean
            {static} - m_Accords : ArrayList<RusLatAccord>
            + RusLatAccord()
            {static} + _new546()
            {static} + canBeEquals()
            {static} + findAccordsLatToRus()
            {static} + findAccordsRusToLat()
            {static} + getVariants()
            + toString()
            - RusLatAccord()
            {static} - _getVarsPref()
            {static} - _isPref()
            {static} - getAccords()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.SerializerHelper {
            + SerializerHelper()
            {static} + deserializeInt()
            {static} + deserializeShort()
            {static} + deserializeString()
            {static} + deserializeTokens()
            {static} + serializeInt()
            {static} + serializeShort()
            {static} + serializeString()
            {static} + serializeToken()
            {static} + serializeTokens()
            {static} - _corrPrevNext()
            {static} - deserializeToken()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.TableCellToken {
            + colSpan : int
            + eoc : boolean
            + rowSpan : int
            + TableCellToken()
            + TableCellToken()
            {static} + _new549()
            + getLines()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.TableHelper {
            {static} + _globalInstance : TableHelper
            + TableHelper()
            {static} + isCellEnd()
            {static} + isRowEnd()
            {static} + tryParseRows()
            {static} - _containsTableChar()
            {static} - parse()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.TableHelper.TableInfo {
            + colSpan : int
            + rowSpan : int
            + TableInfo()
            + TableInfo()
            + toString()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.TableHelper.TableTypes {
            {static} + CELLEND : TableTypes
            {static} + ROWEND : TableTypes
            {static} + TABLEEND : TableTypes
            {static} + TABLESTART : TableTypes
            {static} + UNDEFINED : TableTypes
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : TableTypes[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, TableTypes>
            {static} - mapStringToEnum : HashMap<String, TableTypes>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - TableTypes()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.TableRowToken {
            + cells : ArrayList<TableCellToken>
            + eor : boolean
            + lastRow : boolean
            + TableRowToken()
            + TableRowToken()
            + toString()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace core {
      namespace internal {
        class com.pullenti.ner.core.internal.TextsCompareType {
            {static} + CONTAINS : TextsCompareType
            {static} + EARLY : TextsCompareType
            {static} + EQUIVALENT : TextsCompareType
            {static} + IN : TextsCompareType
            {static} + INTERSECT : TextsCompareType
            {static} + LATER : TextsCompareType
            {static} + NONCOMPARABLE : TextsCompareType
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : TextsCompareType[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, TextsCompareType>
            {static} - mapStringToEnum : HashMap<String, TextsCompareType>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - TextsCompareType()
        }
      }
    }
  }
  

  com.pullenti.ner.core.internal.BlkTyps .up.|> java.lang.Comparable
  com.pullenti.ner.core.internal.BlockLine -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.core.internal.BlockLine o-- com.pullenti.ner.Token : numberEnd
  com.pullenti.ner.core.internal.BlockLine o-- com.pullenti.ner.core.internal.BlkTyps : typ
  com.pullenti.ner.core.internal.BlockTitleToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.core.internal.BlockTitleToken o-- com.pullenti.ner.core.internal.BlkTyps : typ
  com.pullenti.ner.core.internal.GeneralRelationHelper +-down- com.pullenti.ner.core.internal.GeneralRelationHelper.Node
  com.pullenti.ner.core.internal.GeneralRelationHelper.Node o-- com.pullenti.ner.core.AnalyzerData : ad
  com.pullenti.ner.core.internal.GeneralRelationHelper.Node o-- com.pullenti.ner.Referent : ref
  com.pullenti.ner.core.internal.NounPhraseItem -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.core.internal.NounPhraseItemTextVar -up-|> com.pullenti.morph.MorphBaseInfo
  com.pullenti.ner.core.internal.TableCellToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.core.internal.TableHelper +-down- com.pullenti.ner.core.internal.TableHelper.TableInfo
  com.pullenti.ner.core.internal.TableHelper +-down- com.pullenti.ner.core.internal.TableHelper.TableTypes
  com.pullenti.ner.core.internal.TableHelper.TableInfo o-- com.pullenti.ner.Token : src
  com.pullenti.ner.core.internal.TableHelper.TableInfo o-- com.pullenti.ner.core.internal.TableHelper.TableTypes : typ
  com.pullenti.ner.core.internal.TableHelper.TableTypes .up.|> java.lang.Comparable
  com.pullenti.ner.core.internal.TableRowToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.core.internal.TextsCompareType .up.|> java.lang.Comparable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
