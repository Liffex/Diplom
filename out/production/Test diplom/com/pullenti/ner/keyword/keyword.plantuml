@startuml

title __KEYWORD's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace keyword {
      class com.pullenti.ner.keyword.KeywordAnalyzer {
          {static} + ANALYZER_NAME : String
          {static} + SORTKEYWORDSBYRANK : boolean
          {static} + _globalInstance : KeywordAnalyzer
          + annotationMaxSentences : int
          {static} - m_Initialized : boolean
          + KeywordAnalyzer()
          + clone()
          + createAnalyzerData()
          + createReferent()
          + getCaption()
          + getDescription()
          + getImages()
          + getName()
          + getProgressWeight()
          + getTypeSystem()
          + getUsedExternObjectTypes()
          {static} + initialize()
          + isSpecific()
          + process()
          {static} - _addNormals()
          - _addReferents()
          {static} - _calcRank()
          {static} - _setRank()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace keyword {
      class com.pullenti.ner.keyword.KeywordAnalyzer.CompByRank {
          + CompByRank()
          + compare()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace keyword {
      class com.pullenti.ner.keyword.KeywordReferent {
          {static} + ATTR_NORMAL : String
          {static} + ATTR_REF : String
          {static} + ATTR_TYPE : String
          {static} + ATTR_VALUE : String
          {static} + OBJ_TYPENAME : String
          + rank : double
          + KeywordReferent()
          {static} + _new1608()
          + canBeEquals()
          + createOntologyItem()
          + getChildWords()
          + getTyp()
          + mergeSlots()
          + setTyp()
          + toString()
          + union()
          - _getChildWords()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace keyword {
      class com.pullenti.ner.keyword.KeywordType {
          {static} + ANNOTATION : KeywordType
          {static} + OBJECT : KeywordType
          {static} + PREDICATE : KeywordType
          {static} + REFERENT : KeywordType
          {static} + UNDEFINED : KeywordType
          {static} - m_Keys : Collection<Integer>
          {static} - m_Values : KeywordType[]
          - m_str : String
          - m_val : int
          {static} - mapIntToEnum : HashMap<Integer, KeywordType>
          {static} - mapStringToEnum : HashMap<String, KeywordType>
          + compareTo()
          {static} + getValues()
          + hashCode()
          {static} + isDefined()
          {static} + of()
          {static} + of()
          + toString()
          + value()
          - KeywordType()
      }
    }
  }
  

  com.pullenti.ner.keyword.KeywordAnalyzer -up-|> com.pullenti.ner.Analyzer
  com.pullenti.ner.keyword.KeywordAnalyzer +-down- com.pullenti.ner.keyword.KeywordAnalyzer.CompByRank
  com.pullenti.ner.keyword.KeywordAnalyzer.CompByRank .up.|> java.util.Comparator
  com.pullenti.ner.keyword.KeywordReferent -up-|> com.pullenti.ner.Referent
  com.pullenti.ner.keyword.KeywordType .up.|> java.lang.Comparable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
