@startuml

title __INTERNAL's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.MetaOrganization {
            {static} + ORGIMAGEID : String
            {static} + globalMeta : MetaOrganization
            + MetaOrganization()
            + getCaption()
            + getImageId()
            + getName()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgGlobal {
            {static} + GLOBALORGS : IntOntologyCollection
            {static} + GLOBALORGSUA : IntOntologyCollection
            + OrgGlobal()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemEngItem {
            + fullValue : String
            + shortValue : String
            {static} - m_Ontology : TerminCollection
            + OrgItemEngItem()
            + OrgItemEngItem()
            {static} + initialize()
            + isBank()
            {static} + tryAttach()
            {static} + tryAttachOrg()
            {static} - _checkTok()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemEponymToken {
            {static} + _globalInstance : OrgItemEponymToken
            + eponyms : ArrayList<String>
            + OrgItemEponymToken()
            {static} + _new1807()
            + toString()
            {static} + tryAttach()
            - OrgItemEponymToken()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemEponymToken.PersonItemToken {
            + value : String
            + PersonItemToken()
            {static} + _new1811()
            {static} + _new1812()
            + toString()
            {static} + tryAttach()
            - PersonItemToken()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemEponymToken.PersonItemType {
            {static} + AND : PersonItemType
            {static} + INITIAL : PersonItemType
            {static} + LOCASEWORD : PersonItemType
            {static} + NAME : PersonItemType
            {static} + SURNAME : PersonItemType
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : PersonItemType[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, PersonItemType>
            {static} - mapStringToEnum : HashMap<String, PersonItemType>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - PersonItemType()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemNameToken {
            + isAfterConjunction : boolean
            + isDenomination : boolean
            + isEmptyWord : boolean
            + isIgnoredPart : boolean
            + isInDictionary : boolean
            + isNounPhrase : boolean
            + isStdName : boolean
            + isStdTail : boolean
            {static} + m_DepStdNames : TerminCollection
            + preposition : String
            + stdOrgNameNouns : int
            + value : String
            {static} - m_NotTerminateNouns : ArrayList<String>
            {static} - m_StdNames : TerminCollection
            {static} - m_StdNouns : TerminCollection
            {static} - m_StdTails : TerminCollection
            {static} - m_VervotWords : TerminCollection
            + OrgItemNameToken()
            + OrgItemNameToken()
            {static} + _new1817()
            {static} + _new1821()
            {static} + _new1822()
            {static} + _new1823()
            {static} + _new1824()
            {static} + _new1825()
            {static} + _new1826()
            {static} + _new1827()
            {static} + _new1831()
            {static} + _new1832()
            {static} + _new1833()
            {static} + _new2377()
            {static} + _new2379()
            {static} + initialize()
            + toString()
            {static} + tryAttach()
            {static} - _TryAttach()
            {static} - _isNotTermNoun()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemNumberToken {
            + number : String
            + OrgItemNumberToken()
            + OrgItemNumberToken()
            {static} + _new1837()
            + toString()
            {static} + tryAttach()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemTermin {
            {static} + _globalInstance : OrgItemTermin
            + canBeNormalDep : boolean
            + canBeSingleGeo : boolean
            + canHasLatinName : boolean
            + canHasNumber : boolean
            + canHasSingleName : boolean
            + coeff : float
            + isDoubtWord : boolean
            + isPurePrefix : boolean
            + isTop : boolean
            + mustBePartofName : boolean
            + mustHasCapitalName : boolean
            + profiles : ArrayList<OrgProfile>
            + OrgItemTermin()
            + OrgItemTermin()
            {static} + _new1841()
            {static} + _new1844()
            {static} + _new1845()
            {static} + _new1846()
            {static} + _new1849()
            {static} + _new1850()
            {static} + _new1851()
            {static} + _new1852()
            {static} + _new1853()
            {static} + _new1857()
            {static} + _new1859()
            {static} + _new1860()
            {static} + _new1862()
            {static} + _new1865()
            {static} + _new1867()
            {static} + _new1869()
            {static} + _new1870()
            {static} + _new1871()
            {static} + _new1873()
            {static} + _new1880()
            {static} + _new1881()
            {static} + _new1882()
            {static} + _new1885()
            {static} + _new1894()
            {static} + _new1895()
            {static} + _new1896()
            {static} + _new1899()
            {static} + _new1904()
            {static} + _new1907()
            {static} + _new1908()
            {static} + _new1911()
            {static} + _new1917()
            {static} + _new1918()
            {static} + _new1924()
            {static} + _new1932()
            {static} + _new1936()
            {static} + _new1939()
            {static} + _new1948()
            {static} + _new1949()
            {static} + _new1950()
            {static} + _new1960()
            {static} + _new1961()
            {static} + _new1964()
            {static} + _new1965()
            {static} + _new1969()
            {static} + _new1970()
            {static} + _new1971()
            {static} + _new1972()
            {static} + _new1973()
            {static} + _new1974()
            {static} + _new1975()
            {static} + _new1977()
            {static} + _new1978()
            {static} + _new1984()
            {static} + _new1985()
            {static} + _new1988()
            {static} + _new1990()
            {static} + _new1991()
            {static} + _new1992()
            {static} + _new1993()
            {static} + _new1995()
            {static} + _new1996()
            {static} + _new1997()
            {static} + _new1998()
            {static} + _new2003()
            {static} + _new2008()
            {static} + _new2009()
            {static} + _new2011()
            {static} + _new2016()
            {static} + _new2017()
            {static} + _new2018()
            {static} + _new2020()
            {static} + _new2021()
            {static} + _new2022()
            {static} + _new2024()
            {static} + _new2029()
            {static} + _new2030()
            {static} + _new2036()
            {static} + _new2037()
            {static} + _new2041()
            {static} + _new2042()
            {static} + _new2043()
            {static} + _new2050()
            {static} + _new2051()
            {static} + _new2052()
            {static} + _new2053()
            {static} + _new2058()
            {static} + _new2059()
            {static} + _new2063()
            {static} + _new2080()
            {static} + _new2082()
            {static} + _new2171()
            {static} + _new2172()
            {static} + _new2173()
            {static} + _new2174()
            {static} + _new2177()
            {static} + _new2179()
            {static} + _new2190()
            {static} + _new2208()
            {static} + _new2216()
            {static} + _new2222()
            {static} + _new2225()
            {static} + _new2226()
            {static} + _new2231()
            {static} + _new2242()
            {static} + _new2243()
            {static} + _new2244()
            {static} + _new2245()
            {static} + _new2246()
            {static} + _new2247()
            {static} + _new2248()
            {static} + _new2251()
            {static} + _new2253()
            {static} + _new2254()
            {static} + _new2256()
            {static} + _new2257()
            {static} + _new2258()
            {static} + _new2259()
            {static} + _new2260()
            {static} + _new2261()
            {static} + _new2271()
            {static} + _new2272()
            {static} + _new2273()
            {static} + _new2274()
            {static} + _new2281()
            {static} + _new2282()
            {static} + _new2283()
            {static} + _new2284()
            {static} + _new2289()
            {static} + _new2290()
            {static} + _new2291()
            {static} + _new2292()
            {static} + _new2293()
            {static} + _new2297()
            {static} + _new2298()
            {static} + _new2300()
            {static} + _new2301()
            {static} + _new2304()
            {static} + _new2305()
            {static} + _new2311()
            {static} + _new2316()
            {static} + _new2317()
            {static} + _new2321()
            {static} + _new2334()
            {static} + _new2339()
            {static} + _new2343()
            {static} + deserializeSrc()
            + getProfile()
            + getTyp()
            + setProfile()
            + setTyp()
            - copyFrom()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemTermin.Types {
            {static} + DEP : Types
            {static} + DEPADD : Types
            {static} + ORG : Types
            {static} + PREFIX : Types
            {static} + UNDEFINED : Types
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : Types[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, Types>
            {static} - mapStringToEnum : HashMap<String, Types>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - Types()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgItemTypeToken {
            {static} + M_EMPTYTYPWORDS : String[]
            + altName : String
            + altTyp : String
            + canBeDepBeforeOrganization : boolean
            + canBeOrganization : boolean
            + isDouterOrg : boolean
            + isNotTyp : boolean
            {static} + m_KeyWordsForRefs : TerminCollection
            {static} + m_Markers : TerminCollection
            {static} + m_PrefWords : TerminCollection
            + name : String
            + nameIsName : boolean
            + number : String
            + typ : String
            {static} - m_AkcionComp : OrgItemTermin
            {static} - m_Bank : OrgItemTermin
            - m_Coef : float
            {static} - m_DecreeKeyWords : String[]
            {static} - m_Global : IntOntologyCollection
            - m_IsDep : int
            - m_IsDoubtRootWord : int
            {static} - m_IsprKolon : OrgItemTermin
            {static} - m_MO : OrgItemTermin
            {static} - m_MilitaryUnit : OrgItemTermin
            {static} - m_PressIA : OrgItemTermin
            {static} - m_PressRU : OrgItemTermin
            {static} - m_PressUA : OrgItemTermin
            - m_Profile : ArrayList<OrgProfile>
            {static} - m_SberBank : OrgItemTermin
            {static} - m_SecServ : OrgItemTermin
            {static} - m_SovmPred : OrgItemTermin
            {static} - m_StdAdjs : TerminCollection
            {static} - m_StdAdjsUA : TerminCollection
            + OrgItemTypeToken()
            + OrgItemTypeToken()
            {static} + _getKind()
            {static} + _new2331()
            {static} + _new2332()
            {static} + _new2333()
            {static} + _new2336()
            {static} + _new2340()
            {static} + _new2344()
            {static} + _new2345()
            {static} + _new2346()
            {static} + _new2348()
            {static} + _new2350()
            {static} + _new2352()
            {static} + checkKind()
            {static} + checkOrgSpecialWordBefore()
            {static} + checkPersonProperty()
            {static} + deflate()
            + getCoef()
            + getNameWordsCount()
            + getProfiles()
            {static} + initialize()
            {static} + isDecreeKeyword()
            + isDep()
            + isDoubtRootWord()
            {static} + isStdAdjective()
            {static} + isTypeAccords()
            {static} + isTypesAntagonisticKK()
            {static} + isTypesAntagonisticOO()
            {static} + isTypesAntagonisticSS()
            {static} + isTypesAntagonisticTT()
            + setCoef()
            + setDep()
            + setDoubtRootWord()
            + setProfiles()
            + toString()
            {static} + tryAttach()
            {static} + tryAttachReferenceToExistOrg()
            {static} - _TryAttach()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.OrgOwnershipHelper {
            + OrgOwnershipHelper()
            {static} + canBeHigher()
            {static} - _Contains()
            {static} - _militaryRank()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace _org {
      namespace internal {
        class com.pullenti.ner._org.internal.ResourceHelper {
            + ResourceHelper()
            {static} + getBytes()
            {static} + getString()
        }
      }
    }
  }
  

  com.pullenti.ner._org.internal.MetaOrganization -up-|> com.pullenti.ner.ReferentClass
  com.pullenti.ner._org.internal.OrgItemEngItem -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner._org.internal.OrgItemEponymToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner._org.internal.OrgItemEponymToken +-down- com.pullenti.ner._org.internal.OrgItemEponymToken.PersonItemToken
  com.pullenti.ner._org.internal.OrgItemEponymToken +-down- com.pullenti.ner._org.internal.OrgItemEponymToken.PersonItemType
  com.pullenti.ner._org.internal.OrgItemEponymToken.PersonItemToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner._org.internal.OrgItemEponymToken.PersonItemToken o-- com.pullenti.ner._org.internal.OrgItemEponymToken.PersonItemType : typ
  com.pullenti.ner._org.internal.OrgItemEponymToken.PersonItemType .up.|> java.lang.Comparable
  com.pullenti.ner._org.internal.OrgItemNameToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner._org.internal.OrgItemNameToken o-- com.pullenti.ner._org.OrgProfile : orgStdProf
  com.pullenti.ner._org.internal.OrgItemNumberToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner._org.internal.OrgItemTermin -up-|> com.pullenti.ner.core.Termin
  com.pullenti.ner._org.internal.OrgItemTermin o-- com.pullenti.ner._org.internal.OrgItemTermin.Types : m_Typ
  com.pullenti.ner._org.internal.OrgItemTermin +-down- com.pullenti.ner._org.internal.OrgItemTermin.Types
  com.pullenti.ner._org.internal.OrgItemTermin.Types .up.|> java.lang.Comparable
  com.pullenti.ner._org.internal.OrgItemTypeToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner._org.internal.OrgItemTypeToken o-- com.pullenti.morph.CharsInfo : charsRoot
  com.pullenti.ner._org.internal.OrgItemTypeToken o-- com.pullenti.ner.ReferentToken : geo
  com.pullenti.ner._org.internal.OrgItemTypeToken o-- com.pullenti.ner.ReferentToken : geo2
  com.pullenti.ner._org.internal.OrgItemTypeToken o-- com.pullenti.ner._org.internal.OrgItemTermin : root


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
