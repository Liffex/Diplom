@startuml

title __GEO's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace geo {
      class com.pullenti.ner.geo.GeoAnalyzer {
          {static} + ANALYZER_NAME : String
          {static} + _globalInstance : GeoAnalyzer
          {static} - m_Initialized : boolean
          + GeoAnalyzer()
          + clone()
          + createAnalyzerData()
          + createReferent()
          {static} + getAllCountries()
          + getCaption()
          + getImages()
          + getName()
          + getProgressWeight()
          + getTypeSystem()
          + getUsedExternObjectTypes()
          {static} + initialize()
          + process()
          + processCitizen()
          + processOntologyItem()
          + processReferent()
          {static} - _replaceTerrs()
          {static} - geoComp()
          - tryAttachTerritoryAfterCity()
          - tryAttachTerritoryBeforeCity()
          - tryParseCityListBack()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace geo {
      class com.pullenti.ner.geo.GeoAnalyzer.GeoAnalyzerDataWithOntology {
          {static} - ends : String[]
          + GeoAnalyzerDataWithOntology()
          + registerReferent()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace geo {
      class com.pullenti.ner.geo.GeoReferent {
          {static} + ATTR_ALPHA2 : String
          {static} + ATTR_BTI : String
          {static} + ATTR_FIAS : String
          {static} + ATTR_HIGHER : String
          {static} + ATTR_NAME : String
          {static} + ATTR_REF : String
          {static} + ATTR_TYPE : String
          {static} + OBJ_TYPENAME : String
          {static} - bIT_ISBIGCITY : int
          {static} - bIT_ISCITY : int
          {static} - bIT_ISREGION : int
          {static} - bIT_ISSTATE : int
          {static} - bIT_ISTERRITORY : int
          - m_TmpBits : short
          + GeoReferent()
          + addName()
          + addOrgReferent()
          + addSlot()
          + addTyp()
          + addTypCity()
          + addTypReg()
          + addTypState()
          + addTypTer()
          + addTypUnion()
          + canBeEquals()
          + checkAbbr()
          + createOntologyItem()
          + getAlpha2()
          + getCompareStrings()
          + getHigher()
          + getParentReferent()
          + getTopHigher()
          + getTyps()
          + isBigCity()
          + isCity()
          + isRegion()
          + isState()
          + isTerritory()
          + isUnion()
          + mergeSlots2()
          + setAlpha2()
          + setHigher()
          + toSortString()
          + toString()
          + uploadSlot()
          - _ToString()
          {static} - _checkRoundDep()
          - _getName()
          {static} - _isCity()
          {static} - _isRegion()
          - _recalcTmpBits()
      }
    }
  }
  

  com.pullenti.ner.geo.GeoAnalyzer -up-|> com.pullenti.ner.Analyzer
  com.pullenti.ner.geo.GeoAnalyzer +-down- com.pullenti.ner.geo.GeoAnalyzer.GeoAnalyzerDataWithOntology
  com.pullenti.ner.geo.GeoAnalyzer.GeoAnalyzerDataWithOntology -up-|> com.pullenti.ner.core.AnalyzerDataWithOntology
  com.pullenti.ner.geo.GeoReferent -up-|> com.pullenti.ner.Referent
  com.pullenti.ner.geo.GeoReferent o-- com.pullenti.ner.geo.GeoReferent : m_Higher


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
