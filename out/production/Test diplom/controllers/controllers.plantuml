@startuml

title __CONTROLLERS's Class Diagram__\n

  namespace controllers {
    class controllers.AddEventController {
        + dateColumn : TableColumn<Event, String>
        + deleteButton : Button
        + errorLabel : Label
        + eventColumn : TableColumn<Event, String>
        + eventTableView : TableView<Event>
        ~ events : ObservableList<Event>
        - accurateCheckBox : CheckBox
        - eventDate : DatePicker
        - eventText : TextField
        - monthComboBox : ComboBox<Integer>
        - yearComboBox : ComboBox<Integer>
        + addButtonClicked()
        + checkBoxChecked()
        + deleteButtonClicked()
        + fillComboBox()
        ~ initialize()
        - getData()
        - writeData()
    }
  }
  

  namespace controllers {
    class controllers.AddKeyWordController {
        + deleteButton : Button
        + errorLabel : Label
        + keyWordColumn : TableColumn<String, String>
        + keyWordTableView : TableView<String>
        - keyWordText : TextField
        - keyWords : ObservableList<String>
        ~ addKeyWordButtonClicked()
        ~ initialize()
        - deleteButtonClicked()
        - getData()
        - showAlert()
        - writeData()
    }
  }
  

  namespace controllers {
    class controllers.AddPersonController {
        + deletePersonButton : Button
        + errorLabel : Label
        + personColumn : TableColumn<String, String>
        + personTableView : TableView<String>
        - personText : TextField
        - persons : ObservableList<String>
        + deletePersonButtonClicked()
        ~ addPersonButtonClicked()
        ~ initialize()
        - getData()
        - writeData()
    }
  }
  

  namespace controllers {
    class controllers.AddTypeController {
        + deleteButton : Button
        + errorLabel : Label
        + typeColumn : TableColumn<String, String>
        + typeTableView : TableView<String>
        - typeText : TextField
        - types : ObservableList<String>
        ~ addTypeButtonClicked()
        ~ initialize()
        - deleteButtonClicked()
        - getData()
        - writeData()
    }
  }
  

  namespace controllers {
    class controllers.AddingFormController {
        + errorLabel : Label
        + sourceDescriptionText : TextArea
        + sourceTitleText : TextField
        + sourceUrlText : TextField
        ~ idPairG : int
        - addButton : Button
        - contextText : TextArea
        - editButton : Button
        - engPhraseText : TextField
        - eventComboBox : ComboBox<String>
        - keyWordComboBox : ComboBox<String>
        - personComboBox : ComboBox<String>
        - ruTransText : TextField
        - typeComboBox : ComboBox<String>
        + addButtonClicked()
        + addEventClicked()
        + addKeyWordClicked()
        + addPersonClicked()
        + addTypeClicked()
        + editButtonClicked()
        + setEditingMode()
        ~ initialize()
        - fillComboBox()
    }
  }
  

  namespace controllers {
    class controllers.FilterFormController {
        + listViewEventIn : ListView<String>
        + listViewEventOut : ListView<String>
        + listViewKeyWordOut : ListView<String>
        + listViewKeyWordsIn : ListView<String>
        + listViewPersonIn : ListView<String>
        + listViewPersonOut : ListView<String>
        + listViewTypeIn : ListView<String>
        + listViewTypeOut : ListView<String>
        - events : ObservableList<String>
        - keyWords : ObservableList<String>
        - persons : ObservableList<String>
        - wordList : ObservableList<Word>
        + buttonApplyClicked()
        + buttonClearClicked()
        + buttonEventAdd()
        + buttonEventDelete()
        + buttonKeyWordAdd()
        + buttonKeyWordDelete()
        + buttonPersonAdd()
        + buttonPersonDelete()
        + buttonTypeAdd()
        + buttonTypeDelete()
        + getWordList()
        ~ initialize()
    }
  }
  

  namespace controllers {
    class controllers.ViewFormController {
        + contextMenu : ContextMenu
        + menuEdit : Menu
        + menuImport : MenuItem
        + menuLogin : MenuItem
        - columnContext : TableColumn<Word, String>
        - columnDate : TableColumn<Word, String>
        - columnEvent : TableColumn<Word, String>
        - columnKey : TableColumn<Word, String>
        - columnPerson : TableColumn<Word, String>
        - columnPhrase : TableColumn<Word, String>
        - columnSourceTitle : TableColumn<Word, String>
        - columnTranslation : TableColumn<Word, String>
        - columnType : TableColumn<Word, String>
        - dataTableView : TableView<Word>
        - displayData : ObservableList<Word>
        - labelAmount : Label
        - refreshButton : Button
        + menuAddClicked()
        + menuCloseClicked()
        + menuDeleteClicked()
        + menuEditClicked()
        + menuExportClicked()
        + menuFilterEventClicked()
        + menuFilterKeyWordClicked()
        + menuFilterPersonClicked()
        + menuFilterPhraseClicked()
        + menuFilterTranslationClicked()
        + menuFilterTypeClicked()
        + menuImportClicked()
        + menuLogin()
        + menuRefreshClicked()
        + menuSearchMorphologicClicked()
        + menuSearchMorphologicalTranslatr()
        + menuSetCustomFilterClicked()
        + refreshButtonClicked()
        + setMode()
        + showAdminFunctions()
        ~ initialize()
        - tableFill()
    }
  }
  

  controllers.ViewFormController o-- db.DBConnection : DBConnection
  controllers.ViewFormController o-- misc.FileHandler : fileHandler


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
