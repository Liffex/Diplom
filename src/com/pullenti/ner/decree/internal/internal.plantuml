@startuml

title __INTERNAL's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.CanonicDecreeRefUri {
            + beginChar : int
            + endChar : int
            + isAdopted : boolean
            + isDiap : boolean
            + text : String
            + typeWithGeo : String
            + CanonicDecreeRefUri()
            + CanonicDecreeRefUri()
            {static} + _new854()
            {static} + _new856()
            + toString()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.DecreeChangeToken {
            + hasName : boolean
            + hasText : boolean
            + newParts : ArrayList<PartToken>
            + parts : ArrayList<PartToken>
            {static} - m_Terms : TerminCollection
            + DecreeChangeToken()
            + DecreeChangeToken()
            {static} + _new814()
            {static} + _new815()
            {static} + _new824()
            {static} + attachReferents()
            {static} + initialize()
            + isStart()
            + toString()
            {static} + tryAttach()
            {static} - tryAttachList()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.DecreeChangeTokenTyp {
            {static} + ACTION : DecreeChangeTokenTyp
            {static} + AFTERVALUE : DecreeChangeTokenTyp
            {static} + SINGLE : DecreeChangeTokenTyp
            {static} + STARTMULTU : DecreeChangeTokenTyp
            {static} + STARTSINGLE : DecreeChangeTokenTyp
            {static} + UNDEFINED : DecreeChangeTokenTyp
            {static} + VALUE : DecreeChangeTokenTyp
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : DecreeChangeTokenTyp[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, DecreeChangeTokenTyp>
            {static} - mapStringToEnum : HashMap<String, DecreeChangeTokenTyp>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - DecreeChangeTokenTyp()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.DecreeHelper {
            + DecreeHelper()
            {static} + checkNds()
            {static} + parseDateTime()
            {static} + tryCreateCanonicDecreeRefUri()
            {static} - _hasSameDecree()
            {static} - _outMoney()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.DecreeToken {
            {static} + _globalInstance : DecreeToken
            + children : ArrayList<DecreeToken>
            + fullValue : String
            + isDoubtful : boolean
            + numYear : int
            + value : String
            {static} - m_AllTypesRU : ArrayList<String>
            {static} - m_AllTypesUA : ArrayList<String>
            {static} - m_EmptyAdjectives : ArrayList<String>
            {static} - m_Keywords : TerminCollection
            {static} - m_MiscTypesRU : ArrayList<String>
            {static} - m_MiscTypesUA : ArrayList<String>
            {static} - m_StdAdjectives : ArrayList<String>
            {static} - m_Termins : TerminCollection
            + DecreeToken()
            + DecreeToken()
            {static} + _findBackTyp()
            {static} + _new863()
            {static} + _new866()
            {static} + _new868()
            {static} + _new872()
            {static} + _new889()
            {static} + _new891()
            {static} + _new892()
            {static} + _new893()
            {static} + _new900()
            {static} + _new911()
            {static} + _tryAttachStdChangeName()
            {static} + addNewType()
            {static} + getKind()
            {static} + initialize()
            + isDelo()
            {static} + isKeyword()
            {static} + isKeywordStr()
            {static} + isLaw()
            + toString()
            {static} + tryAttach()
            {static} + tryAttachList()
            {static} + tryAttachName()
            {static} - _TryAttach()
            {static} - _isEdition()
            {static} - _isJusNumber()
            {static} - _tryAttachNumber()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.DecreeToken.ItemType {
            {static} + BETWEEN : ItemType
            {static} + DATE : ItemType
            {static} + DATERANGE : ItemType
            {static} + DECREEREF : ItemType
            {static} + EDITION : ItemType
            {static} + MISC : ItemType
            {static} + NAME : ItemType
            {static} + NUMBER : ItemType
            {static} + ORG : ItemType
            {static} + OWNER : ItemType
            {static} + READING : ItemType
            {static} + STDNAME : ItemType
            {static} + TERR : ItemType
            {static} + TYP : ItemType
            {static} + UNKNOWN : ItemType
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : ItemType[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, ItemType>
            {static} - mapStringToEnum : HashMap<String, ItemType>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - ItemType()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.MetaDecree {
            {static} + DECREEIMAGEID : String
            {static} + GLOBALMETA : MetaDecree
            {static} + PUBLISHIMAGEID : String
            {static} + STANDADRIMAGEID : String
            + MetaDecree()
            + getCaption()
            + getImageId()
            + getName()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.MetaDecreeChange {
            {static} + GLOBALMETA : MetaDecreeChange
            {static} + IMAGEID : String
            {static} + KINDFEATURE : Feature
            + MetaDecreeChange()
            + getCaption()
            + getImageId()
            + getName()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.MetaDecreeChangeValue {
            {static} + GLOBALMETA : MetaDecreeChangeValue
            {static} + IMAGEID : String
            {static} + KINDFEATURE : Feature
            + MetaDecreeChangeValue()
            + getCaption()
            + getImageId()
            + getName()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.MetaDecreePart {
            {static} + GLOBALMETA : MetaDecreePart
            {static} + PARTIMAGEID : String
            {static} + PARTLOCIMAGEID : String
            + MetaDecreePart()
            + getCaption()
            + getImageId()
            + getName()
            {static} + initialize()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.PartToken {
            {static} + _globalInstance : PartToken
            + delimAfter : boolean
            + hasTerminator : boolean
            + ind : int
            + isDoubt : boolean
            + name : String
            + values : ArrayList<PartValue>
            {static} - ruNums : String
            + PartToken()
            + PartToken()
            {static} + _getAttrNameByTyp()
            {static} + _getInstrKindByTyp()
            {static} + _getRank()
            {static} + _getTypeByAttrName()
            {static} + _new1062()
            {static} + _new1088()
            {static} + _new818()
            + canBeNextNarrow()
            {static} + getNumber()
            {static} + isPartBefore()
            + toString()
            {static} + tryAttach()
            {static} + tryAttachList()
            {static} + tryCreateBetween()
            {static} - __createPartTyp()
            {static} - _createPartTyp0()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.PartToken.ItemType {
            {static} + ADDAGREE : ItemType
            {static} + APPENDIX : ItemType
            {static} + CHAPTER : ItemType
            {static} + CLAUSE : ItemType
            {static} + DOCPART : ItemType
            {static} + INDENTION : ItemType
            {static} + ITEM : ItemType
            {static} + NOTICE : ItemType
            {static} + PAGE : ItemType
            {static} + PARAGRAPH : ItemType
            {static} + PART : ItemType
            {static} + PREAMBLE : ItemType
            {static} + PREFIX : ItemType
            {static} + SECTION : ItemType
            {static} + SUBINDENTION : ItemType
            {static} + SUBITEM : ItemType
            {static} + SUBPARAGRAPH : ItemType
            {static} + SUBPROGRAM : ItemType
            {static} + SUBSECTION : ItemType
            {static} + UNDEFINED : ItemType
            {static} - m_Keys : Collection<Integer>
            {static} - m_Values : ItemType[]
            - m_str : String
            - m_val : int
            {static} - mapIntToEnum : HashMap<Integer, ItemType>
            {static} - mapStringToEnum : HashMap<String, ItemType>
            + compareTo()
            {static} + getValues()
            + hashCode()
            {static} + isDefined()
            {static} + of()
            {static} + of()
            + toString()
            + value()
            - ItemType()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.PartToken.PartValue {
            + value : String
            + PartValue()
            + PartValue()
            {static} + _new1059()
            + correctValue()
            + getIntValue()
            + getSourceValue()
            + toString()
        }
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace decree {
      namespace internal {
        class com.pullenti.ner.decree.internal.ResourceHelper {
            + ResourceHelper()
            {static} + getBytes()
            {static} + getString()
        }
      }
    }
  }
  

  com.pullenti.ner.decree.internal.CanonicDecreeRefUri o-- com.pullenti.ner.Referent : ref
  com.pullenti.ner.decree.internal.DecreeChangeToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.decree.internal.DecreeChangeToken o-- com.pullenti.ner.decree.DecreeChangeKind : actKind
  com.pullenti.ner.decree.internal.DecreeChangeToken o-- com.pullenti.ner.decree.DecreeChangeValueReferent : changeVal
  com.pullenti.ner.decree.internal.DecreeChangeToken o-- com.pullenti.ner.decree.DecreeReferent : decree
  com.pullenti.ner.decree.internal.DecreeChangeToken o-- com.pullenti.ner.decree.internal.DecreeToken : decreeTok
  com.pullenti.ner.decree.internal.DecreeChangeToken o-- com.pullenti.ner.decree.internal.PartToken.ItemType : partTyp
  com.pullenti.ner.decree.internal.DecreeChangeToken o-- com.pullenti.ner.decree.DecreePartReferent : realPart
  com.pullenti.ner.decree.internal.DecreeChangeToken o-- com.pullenti.ner.decree.internal.DecreeChangeTokenTyp : typ
  com.pullenti.ner.decree.internal.DecreeChangeTokenTyp .up.|> java.lang.Comparable
  com.pullenti.ner.decree.internal.DecreeToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.decree.internal.DecreeToken o-- com.pullenti.ner.MetaToken : aliasToken
  com.pullenti.ner.decree.internal.DecreeToken o-- com.pullenti.ner.ReferentToken : ref
  com.pullenti.ner.decree.internal.DecreeToken o-- com.pullenti.ner.decree.internal.DecreeToken.ItemType : typ
  com.pullenti.ner.decree.internal.DecreeToken o-- com.pullenti.ner.decree.DecreeKind : typKind
  com.pullenti.ner.decree.internal.DecreeToken +-down- com.pullenti.ner.decree.internal.DecreeToken.ItemType
  com.pullenti.ner.decree.internal.DecreeToken.ItemType .up.|> java.lang.Comparable
  com.pullenti.ner.decree.internal.MetaDecree -up-|> com.pullenti.ner.ReferentClass
  com.pullenti.ner.decree.internal.MetaDecreeChange -up-|> com.pullenti.ner.ReferentClass
  com.pullenti.ner.decree.internal.MetaDecreeChangeValue -up-|> com.pullenti.ner.ReferentClass
  com.pullenti.ner.decree.internal.MetaDecreePart -up-|> com.pullenti.ner.ReferentClass
  com.pullenti.ner.decree.internal.PartToken -up-|> com.pullenti.ner.MetaToken
  com.pullenti.ner.decree.internal.PartToken o-- com.pullenti.ner.decree.internal.PartToken.ItemType : altTyp
  com.pullenti.ner.decree.internal.PartToken o-- com.pullenti.ner.TextToken : anaforRef
  com.pullenti.ner.decree.internal.PartToken o-- com.pullenti.ner.decree.DecreeReferent : decree
  com.pullenti.ner.decree.internal.PartToken o-- com.pullenti.ner.decree.internal.PartToken.ItemType : typ
  com.pullenti.ner.decree.internal.PartToken +-down- com.pullenti.ner.decree.internal.PartToken.ItemType
  com.pullenti.ner.decree.internal.PartToken +-down- com.pullenti.ner.decree.internal.PartToken.PartValue
  com.pullenti.ner.decree.internal.PartToken.ItemType .up.|> java.lang.Comparable
  com.pullenti.ner.decree.internal.PartToken.PartValue -up-|> com.pullenti.ner.MetaToken


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
