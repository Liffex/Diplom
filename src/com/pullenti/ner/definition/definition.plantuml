@startuml

title __DEFINITION's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace definition {
      class com.pullenti.ner.definition.DefinitionAnalyzer {
          {static} + ANALYZER_NAME : String
          {static} - m_MiscFirstWords : TerminCollection
          {static} - m_Proc0 : Processor
          {static} - m_VerbotFirstWords : TerminCollection
          {static} - m_VerbotLastWords : TerminCollection
          + DefinitionAnalyzer()
          {static} + calcSemanticCoef()
          + clone()
          + createAnalyzerData()
          + createReferent()
          + getCaption()
          {static} + getConcepts()
          + getDescription()
          + getImages()
          + getName()
          + getProgressWeight()
          + getTypeSystem()
          + getUsedExternObjectTypes()
          {static} + initialize()
          + isSpecific()
          + process()
          + processOntologyItem()
          + processReferent()
          {static} + tryAttach()
          {static} - _ignoreListPrefix()
          {static} - _tryAttachGlossary()
          {static} - _tryAttachMiscToken()
          {static} - _tryParseListItem()
          - tryAttachEnd()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace definition {
      class com.pullenti.ner.definition.DefinitionKind {
          {static} + ASSERTATION : DefinitionKind
          {static} + DEFINITION : DefinitionKind
          {static} + NEGATION : DefinitionKind
          {static} + UNDEFINED : DefinitionKind
          {static} - m_Keys : Collection<Integer>
          {static} - m_Values : DefinitionKind[]
          - m_str : String
          - m_val : int
          {static} - mapIntToEnum : HashMap<Integer, DefinitionKind>
          {static} - mapStringToEnum : HashMap<String, DefinitionKind>
          + compareTo()
          {static} + getValues()
          + hashCode()
          {static} + isDefined()
          {static} + of()
          {static} + of()
          + toString()
          + value()
          - DefinitionKind()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace definition {
      class com.pullenti.ner.definition.DefinitionReferent {
          {static} + ATTR_DECREE : String
          {static} + ATTR_KIND : String
          {static} + ATTR_MISC : String
          {static} + ATTR_TERMIN : String
          {static} + ATTR_TERMIN_ADD : String
          {static} + ATTR_VALUE : String
          {static} + OBJ_TYPENAME : String
          + DefinitionReferent()
          {static} + _new1138()
          + canBeEquals()
          + getKind()
          + getTermin()
          + getTerminAdd()
          + getValue()
          + setKind()
          + toString()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace definition {
      class com.pullenti.ner.definition.DefinitionWithNumericToken {
          + noun : String
          + nounsGenetive : String
          + number : int
          + numberBeginChar : int
          + numberEndChar : int
          + numberSubstring : String
          + text : String
          + DefinitionWithNumericToken()
          + DefinitionWithNumericToken()
          + toString()
          {static} + tryParse()
      }
    }
  }
  

  com.pullenti.ner.definition.DefinitionAnalyzer -up-|> com.pullenti.ner.Analyzer
  com.pullenti.ner.definition.DefinitionKind .up.|> java.lang.Comparable
  com.pullenti.ner.definition.DefinitionReferent -up-|> com.pullenti.ner.Referent
  com.pullenti.ner.definition.DefinitionWithNumericToken -up-|> com.pullenti.ner.MetaToken


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
