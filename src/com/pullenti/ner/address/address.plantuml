@startuml

title __ADDRESS's Class Diagram__\n

  namespace com.pullenti.ner {
    namespace address {
      class com.pullenti.ner.address.AddressAnalyzer {
          {static} + ANALYZER_NAME : String
          {static} + _globalInstance : AddressAnalyzer
          {static} - m_Initialized : boolean
          + AddressAnalyzer()
          + clone()
          + createAnalyzerData()
          + createReferent()
          + getCaption()
          + getDescription()
          + getImages()
          + getName()
          + getProgressWeight()
          + getTypeSystem()
          + getUsedExternObjectTypes()
          {static} + initialize()
          + process()
          + processOntologyItem()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace address {
      class com.pullenti.ner.address.AddressAnalyzer.AddressAnalyzerData {
          + AddressAnalyzerData()
          + getReferents()
          + registerReferent()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace address {
      class com.pullenti.ner.address.AddressBuildingType {
          {static} + BUILDING : AddressBuildingType
          {static} + CONSTRUCTION : AddressBuildingType
          {static} + LITER : AddressBuildingType
          {static} + UNDEFINED : AddressBuildingType
          {static} - m_Keys : Collection<Integer>
          {static} - m_Values : AddressBuildingType[]
          - m_str : String
          - m_val : int
          {static} - mapIntToEnum : HashMap<Integer, AddressBuildingType>
          {static} - mapStringToEnum : HashMap<String, AddressBuildingType>
          + compareTo()
          {static} + getValues()
          + hashCode()
          {static} + isDefined()
          {static} + of()
          {static} + of()
          + toString()
          + value()
          - AddressBuildingType()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace address {
      class com.pullenti.ner.address.AddressDetailType {
          {static} + CROSS : AddressDetailType
          {static} + EAST : AddressDetailType
          {static} + HOSTEL : AddressDetailType
          {static} + NEAR : AddressDetailType
          {static} + NORTH : AddressDetailType
          {static} + NORTHEAST : AddressDetailType
          {static} + NORTHWEST : AddressDetailType
          {static} + SOUTH : AddressDetailType
          {static} + SOUTHEAST : AddressDetailType
          {static} + SOUTHWEST : AddressDetailType
          {static} + UNDEFINED : AddressDetailType
          {static} + WEST : AddressDetailType
          {static} - m_Keys : Collection<Integer>
          {static} - m_Values : AddressDetailType[]
          - m_str : String
          - m_val : int
          {static} - mapIntToEnum : HashMap<Integer, AddressDetailType>
          {static} - mapStringToEnum : HashMap<String, AddressDetailType>
          + compareTo()
          {static} + getValues()
          + hashCode()
          {static} + isDefined()
          {static} + of()
          {static} + of()
          + toString()
          + value()
          - AddressDetailType()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace address {
      class com.pullenti.ner.address.AddressHouseType {
          {static} + ESTATE : AddressHouseType
          {static} + HOUSE : AddressHouseType
          {static} + HOUSEESTATE : AddressHouseType
          {static} + UNDEFINED : AddressHouseType
          {static} - m_Keys : Collection<Integer>
          {static} - m_Values : AddressHouseType[]
          - m_str : String
          - m_val : int
          {static} - mapIntToEnum : HashMap<Integer, AddressHouseType>
          {static} - mapStringToEnum : HashMap<String, AddressHouseType>
          + compareTo()
          {static} + getValues()
          + hashCode()
          {static} + isDefined()
          {static} + of()
          {static} + of()
          + toString()
          + value()
          - AddressHouseType()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace address {
      class com.pullenti.ner.address.AddressReferent {
          {static} + ATTR_BLOCK : String
          {static} + ATTR_BOX : String
          {static} + ATTR_BTI : String
          {static} + ATTR_BUILDING : String
          {static} + ATTR_BUILDINGTYPE : String
          {static} + ATTR_CORPUS : String
          {static} + ATTR_CORPUSORFLAT : String
          {static} + ATTR_CSP : String
          {static} + ATTR_DETAIL : String
          {static} + ATTR_DETAILPARAM : String
          {static} + ATTR_FIAS : String
          {static} + ATTR_FLAT : String
          {static} + ATTR_FLOOR : String
          {static} + ATTR_GEO : String
          {static} + ATTR_HOUSE : String
          {static} + ATTR_HOUSETYPE : String
          {static} + ATTR_KILOMETER : String
          {static} + ATTR_METRO : String
          {static} + ATTR_MISC : String
          {static} + ATTR_OFFICE : String
          {static} + ATTR_PLOT : String
          {static} + ATTR_PORCH : String
          {static} + ATTR_POSTOFFICEBOX : String
          {static} + ATTR_STREET : String
          {static} + ATTR_ZIP : String
          {static} + OBJ_TYPENAME : String
          + AddressReferent()
          + addReferent()
          + canBeEquals()
          + correct()
          + getBlock()
          + getBox()
          + getBuilding()
          + getBuildingType()
          + getCSP()
          + getCorpus()
          + getCorpusOrFlat()
          + getDetail()
          + getFlat()
          + getFloor()
          + getGeos()
          + getHouse()
          + getHouseType()
          + getKilometer()
          + getMetro()
          + getOffice()
          + getParentReferent()
          + getPlot()
          + getPostOfficeBox()
          + getPotch()
          + getStreets()
          + getZip()
          + mergeSlots()
          + setBlock()
          + setBox()
          + setBuilding()
          + setBuildingType()
          + setCSP()
          + setCorpus()
          + setCorpusOrFlat()
          + setDetail()
          + setFlat()
          + setFloor()
          + setHouse()
          + setHouseType()
          + setKilometer()
          + setMetro()
          + setOffice()
          + setPlot()
          + setPostOfficeBox()
          + setPotch()
          + setZip()
          + toString()
          {static} - _isHigher()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace address {
      class com.pullenti.ner.address.StreetKind {
          {static} + METRO : StreetKind
          {static} + ROAD : StreetKind
          {static} + UNDEFINED : StreetKind
          {static} - m_Keys : Collection<Integer>
          {static} - m_Values : StreetKind[]
          - m_str : String
          - m_val : int
          {static} - mapIntToEnum : HashMap<Integer, StreetKind>
          {static} - mapStringToEnum : HashMap<String, StreetKind>
          + compareTo()
          {static} + getValues()
          + hashCode()
          {static} + isDefined()
          {static} + of()
          {static} + of()
          + toString()
          + value()
          - StreetKind()
      }
    }
  }
  

  namespace com.pullenti.ner {
    namespace address {
      class com.pullenti.ner.address.StreetReferent {
          {static} + ATTR_BTI : String
          {static} + ATTR_FIAS : String
          {static} + ATTR_GEO : String
          {static} + ATTR_NAME : String
          {static} + ATTR_NUMBER : String
          {static} + ATTR_OKM : String
          {static} + ATTR_SECNUMBER : String
          {static} + ATTR_TYP : String
          {static} + OBJ_TYPENAME : String
          + StreetReferent()
          + addSlot()
          + canBeEquals()
          + canBeGeneralFor()
          + correct()
          + createOntologyItem()
          + getCity()
          + getGeos()
          + getKind()
          + getNames()
          + getNumber()
          + getParentReferent()
          + getSecNumber()
          + getTyps()
          + mergeSlots()
          + setNumber()
          + setSecNumber()
          + toString()
          - _canBeEquals()
      }
    }
  }
  

  com.pullenti.ner.address.AddressAnalyzer -up-|> com.pullenti.ner.Analyzer
  com.pullenti.ner.address.AddressAnalyzer +-down- com.pullenti.ner.address.AddressAnalyzer.AddressAnalyzerData
  com.pullenti.ner.address.AddressAnalyzer.AddressAnalyzerData -up-|> com.pullenti.ner.core.AnalyzerData
  com.pullenti.ner.address.AddressAnalyzer.AddressAnalyzerData o-- com.pullenti.ner.core.AnalyzerDataWithOntology : streets
  com.pullenti.ner.address.AddressAnalyzer.AddressAnalyzerData o-- com.pullenti.ner.core.AnalyzerData : m_Addresses
  com.pullenti.ner.address.AddressBuildingType .up.|> java.lang.Comparable
  com.pullenti.ner.address.AddressDetailType .up.|> java.lang.Comparable
  com.pullenti.ner.address.AddressHouseType .up.|> java.lang.Comparable
  com.pullenti.ner.address.AddressReferent -up-|> com.pullenti.ner.Referent
  com.pullenti.ner.address.StreetKind .up.|> java.lang.Comparable
  com.pullenti.ner.address.StreetReferent -up-|> com.pullenti.ner.Referent


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
